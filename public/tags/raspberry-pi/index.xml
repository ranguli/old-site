<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>raspberry pi on VO1RFX</title>
    <link>https://vo1rfx.ca/tags/raspberry-pi/</link>
    <description>Recent content in raspberry pi on VO1RFX</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 19 Jun 2019 10:16:35 -0400</lastBuildDate><atom:link href="https://vo1rfx.ca/tags/raspberry-pi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Notes on Emulating a Raspberry Pi for Testing &amp; Development</title>
      <link>https://vo1rfx.ca/post/raspberry-pi-virtual-development/</link>
      <pubDate>Wed, 19 Jun 2019 10:16:35 -0400</pubDate>
      
      <guid>https://vo1rfx.ca/post/raspberry-pi-virtual-development/</guid>
      <description>Here are my personal notes while exploring how to emulate a Raspbian environment running on ARM for the purposes of &amp;ldquo;on the go&amp;rdquo; Raspberry Pi development. Note that this doesn&amp;rsquo;t have an provisions for emulating things like GPIO pins or other hardware, etc.
Requirements  QEMU, with ARM support Raspbian .img (or distro of choice) Raspberry Pi QEMU kernel (there is more than one you can choose from)  # Set these to your own preferences IMAGE=~/Downloads/2019-04-08-rasbian-strech-lite.</description>
    </item>
    
    <item>
      <title>Provisioning a Raspberry Pi (without an SD Card Reader)</title>
      <link>https://vo1rfx.ca/post/lets-do-a-pi-thing/</link>
      <pubDate>Fri, 14 Jun 2019 19:07:23 -0400</pubDate>
      
      <guid>https://vo1rfx.ca/post/lets-do-a-pi-thing/</guid>
      <description>You may also have faced this issue in the past: you have a Raspberry Pi, and a MicroSD card, but no MicroSD card reader. Well, your Raspberry Pi has one. Why can&amp;rsquo;t we use that? Well, if you&amp;rsquo;ve got a Raspberry Pi 3+, you can.
Create a recovery / LiveUSB from your host machine  Install Raspbian on a USB flash drive. On a Raspberry Pi 3B+, it will automatically boot off of mass storage device, like your Raspbian live USB.</description>
    </item>
    
    <item>
      <title>Notes on Mesh Networking: Basic Mesh Configurations</title>
      <link>https://vo1rfx.ca/post/notes-on-mesh-networking-basic-mesh-configurations/</link>
      <pubDate>Fri, 14 Jun 2019 10:48:46 -0400</pubDate>
      
      <guid>https://vo1rfx.ca/post/notes-on-mesh-networking-basic-mesh-configurations/</guid>
      <description>During my exploration of Mesh Networking with Tomesh, I realized that mesh networking can look like a lot of different things.
Example 0: Simple One Node Proof of Concept Figure 0: The simplest mesh network configuration.
The simplest &amp;ldquo;proof of concept&amp;rdquo; configuration to get your own mesh network environment up and running is to create a tomesh node, then connect to it with an Ethernet cable. The node will automatically assign an IPv6 address to the client via DHCP.</description>
    </item>
    
  </channel>
</rss>
